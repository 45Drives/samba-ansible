---
- name: fail if join_method is misconfigured when domain_member is true
  fail:
    msg: "join_method must be either 'sssd' or 'winbind'"
  when: 
    - join_method not in ['sssd','winbind']
    - domain_member | bool
    
- name: fail if join_auth is misconfigured when domain_member is true
  fail:
    msg: "join_auth must be either 'kerberos' or 'password'"
  when: 
    - join_auth not in ['kerberos','password']
    - domain_member | bool

- name: validate join username and password varibles
  block:
    - name: fail if join_user is not set when join_auth is 'password'
      fail:
        msg: "join_user must be specified when using password authentication"
      when: (join_user is not defined) or (join_user|length == 0)

    - name: fail if join_password is not set when join_auth is 'password'
      fail:
        msg: "join_password must be specified when using password authentication"
      when: (join_password is not defined) or (join_password|length == 0)
  when: 
    - join_auth == 'password'
    - domain_member | bool

- name: validate kerberos ticket when join_auth is 'kerberos'
  block:
    - name: validate kerberos ticket with 'klist -s'
      command: klist -s
      register: klist_output
      failed_when: false

    - name: Fail if invalid kerberos ticket
      fail:
        msg: |
          "Invalid kerberos ticket (either expired or non-existent), create a new one with 'kinit <user@realm> and run this playbook again or set join_auth to 'password' to avoid kerberos authentication"
      when:
        - klist_output.rc != 0
  when:
    - join_auth == 'kerberos'
    - domain_member | bool

- name: fail if netbios and workgroup are the same
  fail:
    msg: "netbios_name and workgroup cannot be the same"
  when: netbios_name|lower == workgroup|lower

- name: fail if ctdb VIP interface does not exist
  fail:
    msg: "ctdb VIP interface [{{ item.vip_interface }}] does not exist on this host"
  when:
    - item.vip_interface not in ansible_interfaces
    - cluster_member | bool
  with_items:
    - "{{ ctdb_public_addresses }}"

- name: fail if backend_filesystem is misconfigured 
  fail:
    msg: "backend_filesystem must be either 'cephfs' or 'zfs' or 'generic'"
  when: 
    - backend_filesystem not in ['cephfs','zfs','generic']

- name: validate firewall options
  block:
    - name: make sure firewalld is installed
      shell: command -v firewall-cmd
      failed_when: false
      register: firewall_package
    
    - name: fail if manage_firewall is true, but firewalld is not present
      fail:
        msg: "Firewalld is not installed. Either install firewalld or set manage_firewall to false"
      when: firewall_package.rc != 0

    - name: get firewalld state
      command: /usr/bin/firewall-cmd --state
      failed_when: false
      register: firewall_state

    - name: fail if manage_firewall is true, but firewalld is not running
      fail:
        msg: "firewalld is not running, cant manage firewall. Either start firewalld or set manage_firewall to false"
      when: firewall_state.rc != 0
  when: manage_firewall | bool

# add task that fails if backend_filesystem is cephfs but admin keyring is not present

# add task to ensure there is no trailing slash on shared_storage_mountpoint

# add task to ensure something is mounted on shared_storage_mountpoint


